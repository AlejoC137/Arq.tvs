{"version":3,"file":"PreModalProjects-DzFH8C0i.js","sources":["../../node_modules/lucide-react/dist/esm/icons/folder.js","../../src/components/PreModalProjectsConfig.jsx","../../src/components/PreModalProjects.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Folder = createLucideIcon(\"Folder\", [\n  [\n    \"path\",\n    {\n      d: \"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z\",\n      key: \"1kt360\"\n    }\n  ]\n]);\n\nexport { Folder as default };\n//# sourceMappingURL=folder.js.map\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { X } from 'lucide-react';\r\n// Usamos la acción específica de projectActions\r\nimport { updateProject } from '../store/actions/projectActions.js';\r\n// Asumimos que tienes una acción genérica para cargar otras tablas (como Personal)\r\n// Esta podría venir de tu 'actions.js' o de un 'crudActions'\r\n// Ajusta esta ruta si es necesario\r\nimport { getAllFromTable } from '../store/actions/actions.js'; \r\n\r\n// Lista predefinida de espacios\r\nconst ESPACIOS_LISTA = [\r\n    \"Sala\", \"Comedor\", \"Cocina\", \"Baño Principal\", \"Baño Social\",\r\n    \"Dormitorio 1\", \"Dormitorio 2\", \"Dormitorio 3\", \"Terraza\", \"Balcón\",\r\n    \"Garaje\", \"Patio\", \"Estudio\", \"Zona de Ropas\"\r\n];\r\n\r\n// Lista predefinida de estados (basada en tu imagen y acciones)\r\nconst ESTADOS_LISTA = [\r\n    \"En Progreso\", \"En Diseño\", \"Pendiente\", \"Activo\",\r\n    \"Completado\", \"Pausado\", \"Cancelado\", \"Archivado\"\r\n];\r\n\r\nconst PreModalProjectsConfig = ({ proyecto, onClose, onProjectUpdated }) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    // Estado para el formulario\r\n    const [nombre, setNombre] = useState('');\r\n    const [estado, setEstado] = useState('');\r\n    const [responsable, setResponsable] = useState(''); // Guarda el UUID del responsable\r\n    const [espaciosSeleccionados, setEspaciosSeleccionados] = useState([]);\r\n    \r\n    // Estado para cargar datos\r\n    const [usuarios, setUsuarios] = useState([]); // Lista de usuarios para el dropdown\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Efecto para cargar la lista de usuarios (para el dropdown de 'resp')\r\n    useEffect(() => {\r\n        // Asumo que la tabla de usuarios/personal se llama 'Personal'\r\n        dispatch(getAllFromTable(\"Personal\"))\r\n            .then(action => {\r\n                if (action?.payload) {\r\n                    // Ordenar usuarios alfabéticamente por nombre\r\n                    const sortedUsers = action.payload.sort((a, b) => \r\n                        (a.name || '').localeCompare(b.name || '')\r\n                    );\r\n                    setUsuarios(sortedUsers);\r\n                } else {\r\n                    console.warn(\"No se pudo cargar la lista de personal para el dropdown.\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error al cargar personal:\", err);\r\n            });\r\n    }, [dispatch]);\r\n\r\n    // Efecto para poblar el formulario cuando el 'proyecto' (prop) cambia\r\n    useEffect(() => {\r\n        if (proyecto) {\r\n            setNombre(proyecto.name || '');\r\n            setEstado(proyecto.status || '');\r\n            setResponsable(proyecto.resp || ''); // El UUID del responsable\r\n            setEspaciosSeleccionados(Array.isArray(proyecto.espacios) ? proyecto.espacios : []);\r\n            setError(null);\r\n        }\r\n    }, [proyecto]);\r\n\r\n    /**\r\n     * Maneja el clic en un checkbox de espacio.\r\n     */\r\n    const handleSpaceChange = (spaceName) => {\r\n        setEspaciosSeleccionados(prevEspacios => {\r\n            if (prevEspacios.includes(spaceName)) {\r\n                return prevEspacios.filter(s => s !== spaceName);\r\n            } else {\r\n                return [...prevEspacios, spaceName];\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Maneja el guardado de los cambios.\r\n     */\r\n    const handleSave = () => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        // Objeto con *todos* los datos a actualizar\r\n        const updateData = {\r\n            name: nombre,\r\n            status: estado,\r\n            resp: responsable || null, // Envía null si el string está vacío\r\n            espacios: espaciosSeleccionados\r\n        };\r\n\r\n        dispatch(updateProject(proyecto.id, updateData))\r\n            .then(action => {\r\n                // La acción 'updateProject' de tu factory debería devolver el item actualizado\r\n                if (action && action.payload) { \r\n                    // Notifica al padre (PreModalProjects) que los datos cambiaron\r\n                    onProjectUpdated(action.payload);\r\n                } else {\r\n                     // Fallback por si la acción no devuelve payload pero no falló\r\n                    onProjectUpdated({ ...proyecto, ...updateData });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error al guardar la configuración:\", err);\r\n                setError(\"No se pudo guardar. Inténtalo de nuevo.\");\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Cierra el modal, solo si no está cargando.\r\n     */\r\n    const handleClose = () => {\r\n        if (isLoading) return;\r\n        onClose();\r\n    };\r\n\r\n    if (!proyecto) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm\"\r\n            onClick={handleClose}\r\n        >\r\n            <div \r\n                className=\"bg-white rounded-lg shadow-xl w-full max-w-lg m-4\"\r\n                onClick={e => e.stopPropagation()} \r\n            >\r\n                {/* Cabecera del Modal */}\r\n                <div className=\"flex justify-between items-center p-5 border-b border-gray-200\">\r\n                    <h2 className=\"text-xl font-semibold text-gray-800\">\r\n                        Configurar: <span className=\"font-bold text-blue-600\">{proyecto.name}</span>\r\n                    </h2>\r\n                    <button \r\n                        onClick={handleClose} \r\n                        className=\"p-1 rounded-full text-gray-400 hover:bg-gray-200 hover:text-gray-600\"\r\n                        disabled={isLoading}\r\n                    >\r\n                        <X className=\"w-6 h-6\" />\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Cuerpo del Modal */}\r\n                <div className=\"p-6 max-h-[70vh] overflow-y-auto\">\r\n                    {/* Campos de Texto y Select */}\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n                        {/* Campo Nombre */}\r\n                        <div className=\"md:col-span-2\">\r\n                            <label htmlFor=\"projectName\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Nombre del Proyecto\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"projectName\"\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                                value={nombre}\r\n                                onChange={(e) => setNombre(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        \r\n                        {/* Campo Estado */}\r\n                        <div>\r\n                            <label htmlFor=\"projectStatus\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Estado\r\n                            </label>\r\n                            <select\r\n                                id=\"projectStatus\"\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                                value={estado}\r\n                                onChange={(e) => setEstado(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Seleccionar estado...</option>\r\n                                {ESTADOS_LISTA.map(s => (\r\n                                    <option key={s} value={s}>{s}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        \r\n                        {/* Campo Responsable (Resp) */}\r\n                        <div>\r\n                            <label htmlFor=\"projectResp\" className=\"block text-sm font-medium text-gray-700\">\r\n                                Responsable\r\n                            </label>\r\n                            <select\r\n                                id=\"projectResp\"\r\n                                className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm\"\r\n                                value={responsable} // El valor es el UUID\r\n                                onChange={(e) => setResponsable(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Sin asignar</option>\r\n                                {usuarios.map(user => (\r\n                                    <option key={user.id} value={user.id}>\r\n                                        {/* Muestra nombre, o email, o ID como fallback */}\r\n                                        {user.name || user.email || user.id}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr className=\"mb-6\" />\r\n\r\n                    {/* Checkboxes de Espacios */}\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold text-gray-700 mb-4\">Seleccionar Espacios</h3>\r\n                        <p className=\"text-sm text-gray-500 mb-4\">\r\n                            Marca los espacios que aplican a este proyecto. Se guardará como una lista de textos.\r\n                        </p>\r\n                        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-4\">\r\n                            {ESPACIOS_LISTA.map(space => (\r\n                                <label key={space} className=\"flex items-center space-x-3 p-2 rounded-md hover:bg-gray-50 transition-colors cursor-pointer\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"h-5 w-5 text-blue-600 rounded border-gray-300 focus:ring-blue-500\"\r\n                                        checked={espaciosSeleccionados.includes(space)}\r\n                                        onChange={() => handleSpaceChange(space)}\r\n                                    />\r\n                                    <span className=\"text-gray-700\">{space}</span>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Pie del Modal */}\r\n                <div className=\"flex justify-end items-center gap-4 p-5 border-t border-gray-200 bg-gray-50 rounded-b-lg\">\r\n                    {error && <p className=\"text-sm text-red-600 mr-auto\">{error}</p>}\r\n                    <button\r\n                        onClick={handleClose}\r\n                        disabled={isLoading}\r\n                        className=\"px-4 py-2 bg-white border border-gray-300 rounded-md text-gray-700 font-medium hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:opacity-50\"\r\n                    >\r\n                        Cancelar\r\n                    </button>\r\n                    <button\r\n                        onClick={handleSave}\r\n                        disabled={isLoading}\r\n                        className=\"px-4 py-2 bg-blue-600 border border-transparent rounded-md text-white font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {isLoading ? \"Guardando...\" : \"Guardar Cambios\"}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PreModalProjectsConfig;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Folder, Settings } from 'lucide-react';\r\nimport { getAllFromTable } from '../store/actions/actions';\r\n// CORRECCIÓN AQUÍ: Añade la extensión del archivo .jsx\r\nimport PreModalProjectsConfig from './PreModalProjectsConfig.jsx';\r\n\r\nconst PreModalProjects = () => {\r\n    const dispatch = useDispatch();\r\n    const [proyectos, setProyectos] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // NUEVO ESTADO: Guarda el proyecto que se está configurando.\r\n    // Si es 'null', el modal está cerrado.\r\n    const [configuringProject, setConfiguringProject] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        dispatch(getAllFromTable(\"Proyectos\"))\r\n            .then(action => {\r\n                if (action?.payload) {\r\n                    setProyectos(action.payload);\r\n                } else {\r\n                    throw new Error(\"No se recibieron datos válidos.\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Error al obtener proyectos:\", err);\r\n                setError(\"No se pudieron cargar los proyectos.\");\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    }, [dispatch]);\r\n\r\n    /**\r\n     * Callback para actualizar el estado local cuando se edita un proyecto\r\n     * en el modal de configuración.\r\n     */\r\n    const handleProjectUpdate = (updatedProject) => {\r\n        setProyectos(prevProyectos => \r\n            prevProyectos.map(p => \r\n                p.id === updatedProject.id ? updatedProject : p\r\n            )\r\n        );\r\n        // Importante: Cerramos el modal después de actualizar\r\n        setConfiguringProject(null);\r\n    };\r\n\r\n    // Función simple para cerrar el modal desde el hijo\r\n    const handleCloseModal = () => {\r\n        setConfiguringProject(null);\r\n    };\r\n\r\n    // --- RENDERIZADO ---\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"p-4 sm:p-6 md:p-8 bg-gray-50 min-h-screen\">\r\n                <header className=\"mb-8 max-w-7xl mx-auto\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-800\">Seleccionar Proyecto</h1>\r\n                    <p className=\"text-md text-gray-600 mt-1\">Elige un proyecto para ver el detalle de sus tareas.</p>\r\n                </header>\r\n                <div className=\"max-w-7xl mx-auto text-center text-gray-500 py-16\">\r\n                    Cargando proyectos...\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"p-4 sm:p-6 md:p-8 bg-gray-50 min-h-screen\">\r\n                <header className=\"mb-8 max-w-7xl mx-auto\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-800\">Seleccionar Proyecto</h1>\r\n                </header>\r\n                <div className=\"max-w-7xl mx-auto text-center text-red-500 py-16 bg-white rounded-lg shadow-md\">\r\n                    {error}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-4 sm:p-6 md:p-8 bg-gray-50 min-h-screen overflow-y-auto\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                <header className=\"mb-8\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-800\">Seleccionar Proyecto</h1>\r\n                    <p className=\"text-md text-gray-600 mt-1\">Elige un proyecto para ver el detalle de sus tareas.</p>\r\n                </header>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {proyectos.map((proyecto) => (\r\n                        <div\r\n                            key={proyecto.id}\r\n                            className=\"group flex items-center justify-between gap-4 bg-white p-5 rounded-xl shadow-md border border-gray-200 transition-all duration-300 hover:shadow-lg hover:border-blue-400 hover:-translate-y-1\"\r\n                        >\r\n                            {/* 1. El Enlace: rodea solo el ícono y el nombre */}\r\n                            <a\r\n                                href={`/ProjectTaskModal/${proyecto.id}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"flex items-center gap-4 flex-grow truncate cursor-pointer\"\r\n                                title={`Abrir ${proyecto.name}`}\r\n                            >\r\n                                <Folder className=\"w-8 h-8 text-blue-500 flex-shrink-0 transition-transform duration-300 group-hover:scale-110\" />\r\n                                \r\n                                <span className=\"font-semibold text-lg text-gray-800 truncate\">\r\n                                    {proyecto.name}\r\n                                </span>\r\n                            </a>\r\n\r\n                            {/* 2. Las Acciones: Ahora es un BOTÓN simple */}\r\n                            <div className=\"flex-shrink-0\">\r\n                                <button\r\n                                    onClick={() => setConfiguringProject(proyecto)}\r\n                                    className=\"p-2 text-gray-400 rounded-full transition-colors duration-200 hover:bg-gray-200 hover:text-gray-700\"\r\n                                    title={`Configurar ${proyecto.name}`}\r\n                                >\r\n                                    <Settings className=\"w-5 h-5\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {proyectos.length === 0 && !isLoading && (\r\n                    <div className=\"mt-8 bg-white rounded-xl shadow-md border border-gray-200 p-12 text-center text-gray-500\">\r\n                        <p>No se encontraron proyectos.</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/*\r\n              EL MODAL AHORA VIVE AQUÍ\r\n              Está fuera del 'grid' y del 'map'.\r\n              Solo se renderiza si 'configuringProject' tiene datos.\r\n            */}\r\n            {configuringProject && (\r\n                <PreModalProjectsConfig \r\n                    proyecto={configuringProject}\r\n                    onClose={handleCloseModal}\r\n                    onProjectUpdated={handleProjectUpdate}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PreModalProjects;"],"names":["Folder","createLucideIcon","ESPACIOS_LISTA","ESTADOS_LISTA","PreModalProjectsConfig","proyecto","onClose","onProjectUpdated","dispatch","useDispatch","nombre","setNombre","useState","estado","setEstado","responsable","setResponsable","espaciosSeleccionados","setEspaciosSeleccionados","usuarios","setUsuarios","isLoading","setIsLoading","error","setError","useEffect","getAllFromTable","action","sortedUsers","a","b","err","handleSpaceChange","spaceName","prevEspacios","s","handleSave","updateData","updateProject","handleClose","jsx","jsxs","e","X","user","space","PreModalProjects","proyectos","setProyectos","configuringProject","setConfiguringProject","handleProjectUpdate","updatedProject","prevProyectos","handleCloseModal","Settings"],"mappings":"yFAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAASC,EAAiB,SAAU,CACxC,CACE,OACA,CACE,EAAG,yHACH,IAAK,QACX,CACA,CACA,CAAC,ECNKC,EAAiB,CACnB,OAAQ,UAAW,SAAU,iBAAkB,cAC/C,eAAgB,eAAgB,eAAgB,UAAW,SAC3D,SAAU,QAAS,UAAW,eAClC,EAGMC,EAAgB,CAClB,cAAe,YAAa,YAAa,SACzC,aAAc,UAAW,YAAa,WAC1C,EAEMC,EAAyB,CAAC,CAAE,SAAAC,EAAU,QAAAC,EAAS,iBAAAC,KAAuB,CACxE,MAAMC,EAAWC,EAAA,EAGX,CAACC,EAAQC,CAAS,EAAIC,EAAAA,SAAS,EAAE,EACjC,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,EAAE,EACjC,CAACG,EAAaC,CAAc,EAAIJ,EAAAA,SAAS,EAAE,EAC3C,CAACK,EAAuBC,CAAwB,EAAIN,EAAAA,SAAS,CAAA,CAAE,EAG/D,CAACO,EAAUC,CAAW,EAAIR,EAAAA,SAAS,CAAA,CAAE,EACrC,CAACS,EAAWC,CAAY,EAAIV,EAAAA,SAAS,EAAK,EAC1C,CAACW,EAAOC,CAAQ,EAAIZ,EAAAA,SAAS,IAAI,EAGvCa,EAAAA,UAAU,IAAM,CAEZjB,EAASkB,EAAgB,UAAU,CAAC,EAC/B,KAAKC,GAAU,CACZ,GAAIA,GAAA,MAAAA,EAAQ,QAAS,CAEjB,MAAMC,EAAcD,EAAO,QAAQ,KAAK,CAACE,EAAGC,KACvCD,EAAE,MAAQ,IAAI,cAAcC,EAAE,MAAQ,EAAE,CAAA,EAE7CV,EAAYQ,CAAW,CAC3B,MACI,QAAQ,KAAK,0DAA0D,CAE/E,CAAC,EACA,MAAMG,GAAO,CACV,QAAQ,MAAM,4BAA6BA,CAAG,CAClD,CAAC,CACT,EAAG,CAACvB,CAAQ,CAAC,EAGbiB,EAAAA,UAAU,IAAM,CACRpB,IACAM,EAAUN,EAAS,MAAQ,EAAE,EAC7BS,EAAUT,EAAS,QAAU,EAAE,EAC/BW,EAAeX,EAAS,MAAQ,EAAE,EAClCa,EAAyB,MAAM,QAAQb,EAAS,QAAQ,EAAIA,EAAS,SAAW,EAAE,EAClFmB,EAAS,IAAI,EAErB,EAAG,CAACnB,CAAQ,CAAC,EAKb,MAAM2B,EAAqBC,GAAc,CACrCf,EAAyBgB,GACjBA,EAAa,SAASD,CAAS,EACxBC,EAAa,OAAOC,GAAKA,IAAMF,CAAS,EAExC,CAAC,GAAGC,EAAcD,CAAS,CAEzC,CACL,EAKMG,EAAa,IAAM,CACrBd,EAAa,EAAI,EACjBE,EAAS,IAAI,EAGb,MAAMa,EAAa,CACf,KAAM3B,EACN,OAAQG,EACR,KAAME,GAAe,KACrB,SAAUE,CAAA,EAGdT,EAAS8B,EAAcjC,EAAS,GAAIgC,CAAU,CAAC,EAC1C,KAAKV,GAAU,CAERA,GAAUA,EAAO,QAEjBpB,EAAiBoB,EAAO,OAAO,EAG/BpB,EAAiB,CAAE,GAAGF,EAAU,GAAGgC,EAAY,CAEvD,CAAC,EACA,MAAMN,GAAO,CACV,QAAQ,MAAM,qCAAsCA,CAAG,EACvDP,EAAS,yCAAyC,CACtD,CAAC,EACA,QAAQ,IAAM,CACXF,EAAa,EAAK,CACtB,CAAC,CACT,EAKMiB,EAAc,IAAM,CAClBlB,GACJf,EAAA,CACJ,EAEA,OAAKD,EAKDmC,EAAAA,IAAC,MAAA,CACG,UAAU,8FACV,QAASD,EAET,SAAAE,EAAAA,KAAC,MAAA,CACG,UAAU,oDACV,QAASC,GAAKA,EAAE,gBAAA,EAGhB,SAAA,CAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,iEACX,SAAA,CAAAA,EAAAA,KAAC,KAAA,CAAG,UAAU,sCAAsC,SAAA,CAAA,eACpCD,EAAAA,IAAC,OAAA,CAAK,UAAU,0BAA2B,WAAS,IAAA,CAAK,CAAA,EACzE,EACAA,EAAAA,IAAC,SAAA,CACG,QAASD,EACT,UAAU,uEACV,SAAUlB,EAEV,SAAAmB,EAAAA,IAACG,EAAA,CAAE,UAAU,SAAA,CAAU,CAAA,CAAA,CAC3B,EACJ,EAGAF,EAAAA,KAAC,MAAA,CAAI,UAAU,mCAEX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,6CAEX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACX,SAAA,CAAAD,MAAC,QAAA,CAAM,QAAQ,cAAc,UAAU,0CAA0C,SAAA,sBAEjF,EACAA,EAAAA,IAAC,QAAA,CACG,KAAK,OACL,GAAG,cACH,UAAU,8GACV,MAAO9B,EACP,SAAWgC,GAAM/B,EAAU+B,EAAE,OAAO,KAAK,CAAA,CAAA,CAC7C,EACJ,SAGC,MAAA,CACG,SAAA,CAAAF,MAAC,QAAA,CAAM,QAAQ,gBAAgB,UAAU,0CAA0C,SAAA,SAEnF,EACAC,EAAAA,KAAC,SAAA,CACG,GAAG,gBACH,UAAU,8GACV,MAAO5B,EACP,SAAW6B,GAAM5B,EAAU4B,EAAE,OAAO,KAAK,EAEzC,SAAA,CAAAF,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,wBAAqB,EACrCrC,EAAc,IAAI,GACfqC,EAAAA,IAAC,UAAe,MAAO,EAAI,SAAA,CAAA,EAAd,CAAgB,CAChC,CAAA,CAAA,CAAA,CACL,EACJ,SAGC,MAAA,CACG,SAAA,CAAAA,MAAC,QAAA,CAAM,QAAQ,cAAc,UAAU,0CAA0C,SAAA,cAEjF,EACAC,EAAAA,KAAC,SAAA,CACG,GAAG,cACH,UAAU,8GACV,MAAO1B,EACP,SAAW2B,GAAM1B,EAAe0B,EAAE,OAAO,KAAK,EAE9C,SAAA,CAAAF,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,cAAW,EAC3BrB,EAAS,IAAIyB,GACVJ,EAAAA,IAAC,SAAA,CAAqB,MAAOI,EAAK,GAE7B,SAAAA,EAAK,MAAQA,EAAK,OAASA,EAAK,EAAA,EAFxBA,EAAK,EAGlB,CACH,CAAA,CAAA,CAAA,CACL,CAAA,CACJ,CAAA,EACJ,EAEAJ,EAAAA,IAAC,KAAA,CAAG,UAAU,MAAA,CAAO,SAGpB,MAAA,CACG,SAAA,CAAAA,EAAAA,IAAC,KAAA,CAAG,UAAU,2CAA2C,SAAA,uBAAoB,EAC7EA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,wFAE1C,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACV,SAAAtC,EAAe,IAAI2C,GAChBJ,EAAAA,KAAC,QAAA,CAAkB,UAAU,+FACzB,SAAA,CAAAD,EAAAA,IAAC,QAAA,CACG,KAAK,WACL,UAAU,oEACV,QAASvB,EAAsB,SAAS4B,CAAK,EAC7C,SAAU,IAAMb,EAAkBa,CAAK,CAAA,CAAA,EAE3CL,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAiB,SAAAK,CAAA,CAAM,CAAA,CAAA,EAP/BA,CAQZ,CACH,CAAA,CACL,CAAA,CAAA,CACJ,CAAA,EACJ,EAGAJ,EAAAA,KAAC,MAAA,CAAI,UAAU,2FACV,SAAA,CAAAlB,GAASiB,EAAAA,IAAC,IAAA,CAAE,UAAU,+BAAgC,SAAAjB,EAAM,EAC7DiB,EAAAA,IAAC,SAAA,CACG,QAASD,EACT,SAAUlB,EACV,UAAU,8LACb,SAAA,UAAA,CAAA,EAGDmB,EAAAA,IAAC,SAAA,CACG,QAASJ,EACT,SAAUf,EACV,UAAU,8NAET,WAAY,eAAiB,iBAAA,CAAA,CAClC,CAAA,CACJ,CAAA,CAAA,CAAA,CACJ,CAAA,EA9HG,IAiIf,ECvPMyB,EAAmB,IAAM,CAC3B,MAAMtC,EAAWC,EAAA,EACX,CAACsC,EAAWC,CAAY,EAAIpC,EAAAA,SAAS,CAAA,CAAE,EACvC,CAACS,EAAWC,CAAY,EAAIV,EAAAA,SAAS,EAAI,EACzC,CAACW,EAAOC,CAAQ,EAAIZ,EAAAA,SAAS,IAAI,EAIjC,CAACqC,EAAoBC,CAAqB,EAAItC,EAAAA,SAAS,IAAI,EAEjEa,EAAAA,UAAU,IAAM,CACZH,EAAa,EAAI,EACjBE,EAAS,IAAI,EACbhB,EAASkB,EAAgB,WAAW,CAAC,EAChC,KAAKC,GAAU,CACZ,GAAIA,GAAA,MAAAA,EAAQ,QACRqB,EAAarB,EAAO,OAAO,MAE3B,OAAM,IAAI,MAAM,iCAAiC,CAEzD,CAAC,EACA,MAAMI,GAAO,CACV,QAAQ,MAAM,8BAA+BA,CAAG,EAChDP,EAAS,sCAAsC,CACnD,CAAC,EACA,QAAQ,IAAM,CACXF,EAAa,EAAK,CACtB,CAAC,CACT,EAAG,CAACd,CAAQ,CAAC,EAMb,MAAM2C,EAAuBC,GAAmB,CAC5CJ,KACIK,EAAc,IAAI,GACd,EAAE,KAAOD,EAAe,GAAKA,EAAiB,CAAA,CAClD,EAGJF,EAAsB,IAAI,CAC9B,EAGMI,EAAmB,IAAM,CAC3BJ,EAAsB,IAAI,CAC9B,EAIA,OAAI7B,EAEIoB,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACX,SAAA,CAAAA,EAAAA,KAAC,SAAA,CAAO,UAAU,yBACd,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,uBAAoB,EACrEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,sDAAA,CAAoD,CAAA,EAClG,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,oDAAoD,SAAA,uBAAA,CAEnE,CAAA,EACJ,EAIJjB,EAEIkB,EAAAA,KAAC,MAAA,CAAI,UAAU,4CACX,SAAA,CAAAD,EAAAA,IAAC,SAAA,CAAO,UAAU,yBACd,SAAAA,EAAAA,IAAC,MAAG,UAAU,mCAAmC,gCAAoB,CAAA,CACzE,EACAA,EAAAA,IAAC,MAAA,CAAI,UAAU,iFACV,SAAAjB,CAAA,CACL,CAAA,EACJ,EAKJkB,EAAAA,KAAC,MAAA,CAAI,UAAU,4DACX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACX,SAAA,CAAAA,EAAAA,KAAC,SAAA,CAAO,UAAU,OACd,SAAA,CAAAD,EAAAA,IAAC,KAAA,CAAG,UAAU,mCAAmC,SAAA,uBAAoB,EACrEA,EAAAA,IAAC,IAAA,CAAE,UAAU,6BAA6B,SAAA,sDAAA,CAAoD,CAAA,EAClG,QAEC,MAAA,CAAI,UAAU,uDACV,SAAAO,EAAU,IAAK1C,GACZoC,EAAAA,KAAC,MAAA,CAEG,UAAU,gMAGV,SAAA,CAAAA,EAAAA,KAAC,IAAA,CACG,KAAM,qBAAqBpC,EAAS,EAAE,GACtC,OAAO,SACP,IAAI,sBACJ,UAAU,4DACV,MAAO,SAASA,EAAS,IAAI,GAE7B,SAAA,CAAAmC,EAAAA,IAACxC,EAAA,CAAO,UAAU,6FAAA,CAA8F,EAEhHwC,EAAAA,IAAC,OAAA,CAAK,UAAU,+CACX,WAAS,IAAA,CACd,CAAA,CAAA,CAAA,EAIJA,EAAAA,IAAC,MAAA,CAAI,UAAU,gBACX,SAAAA,EAAAA,IAAC,SAAA,CACG,QAAS,IAAMU,EAAsB7C,CAAQ,EAC7C,UAAU,sGACV,MAAO,cAAcA,EAAS,IAAI,GAElC,SAAAmC,EAAAA,IAACe,EAAA,CAAS,UAAU,SAAA,CAAU,CAAA,CAAA,CAClC,CACJ,CAAA,CAAA,EA3BKlD,EAAS,EAAA,CA6BrB,EACL,EAEC0C,EAAU,SAAW,GAAK,CAAC1B,GACxBmB,EAAAA,IAAC,MAAA,CAAI,UAAU,2FACX,SAAAA,EAAAA,IAAC,IAAA,CAAE,SAAA,8BAAA,CAA4B,CAAA,CACnC,CAAA,EAER,EAOCS,GACGT,EAAAA,IAACpC,EAAA,CACG,SAAU6C,EACV,QAASK,EACT,iBAAkBH,CAAA,CAAA,CACtB,EAER,CAER","x_google_ignoreList":[0]}