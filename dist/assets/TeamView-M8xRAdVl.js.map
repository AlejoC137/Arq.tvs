{"version":3,"file":"TeamView-M8xRAdVl.js","sources":["../../node_modules/lucide-react/dist/esm/icons/circle-alert.js","../../node_modules/lucide-react/dist/esm/icons/filter.js","../../node_modules/lucide-react/dist/esm/icons/triangle-alert.js","../../src/types/database.js","../../src/components/StaffTaskModal.jsx","../../src/components/TeamView.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CircleAlert = createLucideIcon(\"CircleAlert\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n]);\n\nexport { CircleAlert as default };\n//# sourceMappingURL=circle-alert.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Filter = createLucideIcon(\"Filter\", [\n  [\"polygon\", { points: \"22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3\", key: \"1yg77f\" }]\n]);\n\nexport { Filter as default };\n//# sourceMappingURL=filter.js.map\n","/**\n * @license lucide-react v0.441.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst TriangleAlert = createLucideIcon(\"TriangleAlert\", [\n  [\n    \"path\",\n    {\n      d: \"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\",\n      key: \"wmoenq\"\n    }\n  ],\n  [\"path\", { d: \"M12 9v4\", key: \"juzpu7\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n]);\n\nexport { TriangleAlert as default };\n//# sourceMappingURL=triangle-alert.js.map\n","// Staff table interface\r\nexport const StaffSchema = {\r\n  id: 'string', // UUID\r\n  name: 'string',\r\n  role_description: 'string',\r\n  Tasks: 'string' // Could be empty or contain task references\r\n};\r\n\r\n// Stage table interface  \r\nexport const StageSchema = {\r\n  id: 'string', // UUID\r\n  name: 'string',\r\n  description: 'string',\r\n  objectives: 'string',\r\n  deliverables: 'string', \r\n  products: 'string',\r\n  stakeholders: 'string'\r\n};\r\n\r\n// Tasks table interface\r\nexport const TasksSchema = {\r\n  id: 'string', // UUID\r\n  category: 'string',\r\n  task_description: 'string',\r\n  status: 'string', // 'Pendiente', 'En Diseño', 'En Progreso', 'Aprobación Requerida', 'Bloqueado', 'Completo', etc.\r\n  notes: 'string',\r\n  project_id: 'string', // UUID foreign key\r\n  staff_id: 'string', // UUID foreign key  \r\n  stage_id: 'string' // UUID foreign key\r\n};\r\n\r\n// Projects table interface\r\nexport const ProjectsSchema = {\r\n  id: 'string', // UUID\r\n  name: 'string',\r\n  status: 'string', // 'Pendiente', 'En Progreso', 'En Diseño', etc.\r\n  resp: 'string' // Responsible person\r\n};\r\n\r\n// Entregables template table interface\r\nexport const EntregablesTemplateSchema = {\r\n  id: 'string', // UUID\r\n  entregable_nombre: 'string',\r\n  tipo: 'string', // '2D', '3D', '2D/3D'\r\n  vistaTipo: 'string', // 'Planta', 'Alzado', 'Perspectiva', etc.\r\n  escala_tipica: 'string', // '1:50', '1:100', 'Sin escala', etc.\r\n  software_utilizado: 'string',\r\n  Stage_id: 'string', // UUID foreign key\r\n  vistaSubTipo: 'string'\r\n};\r\n\r\n// Status options for tasks\r\nexport const TaskStatusOptions = [\r\n  'Pendiente',\r\n  'En Diseño', \r\n  'En Progreso',\r\n  'Aprobación Requerida',\r\n  'Bloqueado',\r\n  'En Discusión',\r\n  'Completo'\r\n];\r\n\r\n// Status options for projects\r\nexport const ProjectStatusOptions = [\r\n  'Pendiente',\r\n  'En Progreso',\r\n  'En Diseño',\r\n  'Pausado',\r\n  'Completo'\r\n];\r\n\r\n// Task categories\r\nexport const TaskCategories = [\r\n  'Diseño estructural',\r\n  'Revisión de diseño', \r\n  'Puertas',\r\n  'Baños',\r\n  'Exterior',\r\n  'Obra',\r\n  'Redes',\r\n  'Interior',\r\n  'Paisajismo',\r\n  'Diseño técnico',\r\n  'Fachada',\r\n  'Entrega a Curaduría',\r\n  'Habitación de huéspedes',\r\n  'Diseño de espacio público',\r\n  'General',\r\n  'Acabados'\r\n];\r\n\r\n// View types for entregables\r\nexport const ViewTypes = [\r\n  'Planta',\r\n  'Alzado', \r\n  'Sección',\r\n  'Perspectiva',\r\n  'Axonométrica',\r\n  'Isométrica',\r\n  'Diagrama',\r\n  'Plano Urbano',\r\n  'Sección/Alzado Detallado'\r\n];\r\n\r\n// Software options\r\nexport const SoftwareOptions = [\r\n  'Revit',\r\n  'AutoCAD',\r\n  'Adobe Suite',\r\n  'Lumion/VRay',\r\n  'SketchUp/Revit',\r\n  'AutoCAD/GIS',\r\n  'Revit/AutoCAD'\r\n];\r\n\r\n// Tipo options for entregables\r\nexport const EntregableTypes = [\r\n  '2D',\r\n  '3D', \r\n  '2D/3D'\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { \r\n  X, \r\n  CheckCircle, \r\n  Clock, \r\n  AlertTriangle, \r\n  Edit, \r\n  Trash2,\r\n  Filter,\r\n  Plus\r\n} from 'lucide-react';\r\nimport { \r\n  fetchTasksByStaff, \r\n  updateTask, \r\n  updateTaskStatus,\r\n  deleteTask,\r\n  fetchProjects,\r\n  fetchStages\r\n} from '../store/actions/actions';\r\nimport { TaskStatusOptions } from '../types/database';\r\n\r\nconst StaffTaskModal = ({ staff, onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [filteredTasks, setFilteredTasks] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n  const [stages, setStages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [sortBy, setSortBy] = useState('status'); // status, project, stage\r\n  const [editingTask, setEditingTask] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [staff.id, dispatch]);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [tasks, filterStatus, sortBy]);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [tasksResult, projectsResult, stagesResult] = await Promise.all([\r\n        dispatch(fetchTasksByStaff(staff.id)),\r\n        dispatch(fetchProjects()),\r\n        dispatch(fetchStages())\r\n      ]);\r\n\r\n      if (tasksResult.success) {\r\n        setTasks(tasksResult.data || []);\r\n      }\r\n      if (projectsResult.success) {\r\n        setProjects(projectsResult.data || []);\r\n      }\r\n      if (stagesResult.success) {\r\n        setStages(stagesResult.data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading staff tasks:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...tasks];\r\n\r\n    // Filtrar por estado\r\n    if (filterStatus !== 'all') {\r\n      filtered = filtered.filter(t => t.status === filterStatus);\r\n    }\r\n\r\n    // Ordenar\r\n    switch (sortBy) {\r\n      case 'status':\r\n        filtered.sort((a, b) => {\r\n          const statusOrder = ['Bloqueado', 'Pendiente', 'En Diseño', 'En Progreso', 'Aprobación Requerida', 'Completo'];\r\n          return statusOrder.indexOf(a.status) - statusOrder.indexOf(b.status);\r\n        });\r\n        break;\r\n      case 'project':\r\n        filtered.sort((a, b) => {\r\n          const projA = getProjectName(a.project_id);\r\n          const projB = getProjectName(b.project_id);\r\n          return projA.localeCompare(projB);\r\n        });\r\n        break;\r\n      case 'stage':\r\n        filtered.sort((a, b) => {\r\n          const stageA = getStageName(a.stage_id);\r\n          const stageB = getStageName(b.stage_id);\r\n          return stageA.localeCompare(stageB);\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setFilteredTasks(filtered);\r\n  };\r\n\r\n  const getProjectName = (projectId) => {\r\n    const project = projects.find(p => p.id === projectId);\r\n    return project ? project.name : 'Sin proyecto';\r\n  };\r\n\r\n  const getStageName = (stageId) => {\r\n    const stage = stages.find(s => s.id === stageId);\r\n    return stage ? stage.name : 'Sin etapa';\r\n  };\r\n\r\n  const handleStatusChange = async (taskId, newStatus) => {\r\n    const result = await dispatch(updateTaskStatus(taskId, newStatus));\r\n    if (result.success) {\r\n      loadData();\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    if (window.confirm('¿Estás seguro de eliminar esta tarea?')) {\r\n      const result = await dispatch(deleteTask(taskId));\r\n      if (result.success) {\r\n        loadData();\r\n      }\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'Completo':\r\n        return <CheckCircle className=\"w-4 h-4\" />;\r\n      case 'Bloqueado':\r\n        return <AlertTriangle className=\"w-4 h-4\" />;\r\n      case 'Pendiente':\r\n        return <Clock className=\"w-4 h-4\" />;\r\n      default:\r\n        return <Clock className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      'Pendiente': 'bg-gray-100 text-gray-800 border-gray-300',\r\n      'En Diseño': 'bg-purple-100 text-purple-800 border-purple-300',\r\n      'En Progreso': 'bg-blue-100 text-blue-800 border-blue-300',\r\n      'Aprobación Requerida': 'bg-orange-100 text-orange-800 border-orange-300',\r\n      'Bloqueado': 'bg-red-100 text-red-800 border-red-300',\r\n      'En Discusión': 'bg-yellow-100 text-yellow-800 border-yellow-300',\r\n      'Completo': 'bg-green-100 text-green-800 border-green-300',\r\n    };\r\n    return colors[status] || 'bg-gray-100 text-gray-800 border-gray-300';\r\n  };\r\n\r\n  const taskCounts = {\r\n    all: tasks.length,\r\n    Pendiente: tasks.filter(t => t.status === 'Pendiente').length,\r\n    'En Progreso': tasks.filter(t => t.status === 'En Progreso' || t.status === 'En Diseño').length,\r\n    Completo: tasks.filter(t => t.status === 'Completo').length,\r\n    Bloqueado: tasks.filter(t => t.status === 'Bloqueado').length,\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center\">\r\n        <div className=\"bg-white rounded-lg p-8\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"text-gray-600 mt-4\">Cargando tareas...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\r\n      <div className=\"bg-white rounded-xl shadow-2xl w-full max-w-6xl max-h-[90vh] overflow-hidden flex flex-col\">\r\n        {/* Header */}\r\n        <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 px-6 py-4 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-12 h-12 bg-white rounded-full flex items-center justify-center text-blue-600 font-bold text-xl\">\r\n              {staff.name.charAt(0).toUpperCase()}\r\n            </div>\r\n            <div className=\"text-white\">\r\n              <h2 className=\"text-2xl font-bold\">{staff.name}</h2>\r\n              <p className=\"text-blue-100\">{staff.role_description || 'Sin rol'}</p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-white hover:bg-white hover:bg-opacity-20 rounded-full p-2 transition-colors\"\r\n          >\r\n            <X className=\"w-6 h-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Stats Bar */}\r\n        <div className=\"bg-gray-50 border-b px-6 py-3\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"text-sm\">\r\n                <span className=\"font-semibold text-gray-700\">Total:</span>\r\n                <span className=\"ml-2 text-gray-900 font-bold\">{taskCounts.all}</span>\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <span className=\"font-semibold text-gray-700\">Pendientes:</span>\r\n                <span className=\"ml-2 text-orange-600 font-bold\">{taskCounts.Pendiente}</span>\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <span className=\"font-semibold text-gray-700\">En Curso:</span>\r\n                <span className=\"ml-2 text-blue-600 font-bold\">{taskCounts['En Progreso']}</span>\r\n              </div>\r\n              <div className=\"text-sm\">\r\n                <span className=\"font-semibold text-gray-700\">Completadas:</span>\r\n                <span className=\"ml-2 text-green-600 font-bold\">{taskCounts.Completo}</span>\r\n              </div>\r\n              {taskCounts.Bloqueado > 0 && (\r\n                <div className=\"text-sm\">\r\n                  <span className=\"font-semibold text-gray-700\">Bloqueadas:</span>\r\n                  <span className=\"ml-2 text-red-600 font-bold\">{taskCounts.Bloqueado}</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white border-b px-6 py-3 flex items-center space-x-4\">\r\n          <Filter className=\"w-5 h-5 text-gray-600\" />\r\n          \r\n          <select\r\n            value={filterStatus}\r\n            onChange={(e) => setFilterStatus(e.target.value)}\r\n            className=\"border rounded-lg px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"all\">Todos los estados</option>\r\n            {TaskStatusOptions.map(status => (\r\n              <option key={status} value={status}>{status}</option>\r\n            ))}\r\n          </select>\r\n\r\n          <select\r\n            value={sortBy}\r\n            onChange={(e) => setSortBy(e.target.value)}\r\n            className=\"border rounded-lg px-3 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"status\">Ordenar por estado</option>\r\n            <option value=\"project\">Ordenar por proyecto</option>\r\n            <option value=\"stage\">Ordenar por etapa</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Tasks List */}\r\n        <div className=\"flex-1 overflow-y-auto p-6\">\r\n          {filteredTasks.length === 0 ? (\r\n            <div className=\"text-center py-12\">\r\n              <Clock className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n              <p className=\"text-gray-600\">No hay tareas que mostrar</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"space-y-3\">\r\n              {filteredTasks.map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"bg-white border rounded-lg p-4 hover:shadow-md transition-shadow\"\r\n                >\r\n                  <div className=\"flex items-start justify-between gap-4\">\r\n                    {/* Task Info */}\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(task.status)}`}>\r\n                          {getStatusIcon(task.status)}\r\n                          <span className=\"ml-1\">{task.status}</span>\r\n                        </span>\r\n                        <span className=\"text-xs text-gray-500 bg-gray-100 px-2 py-1 rounded\">\r\n                          {task.category}\r\n                        </span>\r\n                      </div>\r\n                      \r\n                      <h4 className=\"font-medium text-gray-900 mb-1\">\r\n                        {task.task_description}\r\n                      </h4>\r\n                      \r\n                      <div className=\"flex items-center gap-4 text-sm text-gray-600\">\r\n                        <span>📁 {getProjectName(task.project_id)}</span>\r\n                        <span>📋 {getStageName(task.stage_id)}</span>\r\n                      </div>\r\n                      \r\n                      {task.notes && (\r\n                        <p className=\"text-sm text-gray-600 mt-2 line-clamp-2\">\r\n                          {task.notes}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* Actions */}\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <select\r\n                        value={task.status}\r\n                        onChange={(e) => handleStatusChange(task.id, e.target.value)}\r\n                        className=\"text-sm border rounded px-2 py-1 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      >\r\n                        {TaskStatusOptions.map(status => (\r\n                          <option key={status} value={status}>{status}</option>\r\n                        ))}\r\n                      </select>\r\n                      \r\n                      <button\r\n                        onClick={() => handleDeleteTask(task.id)}\r\n                        className=\"p-2 text-red-500 hover:bg-red-50 rounded transition-colors\"\r\n                        title=\"Eliminar tarea\"\r\n                      >\r\n                        <Trash2 className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"bg-gray-50 border-t px-6 py-4 flex items-center justify-end\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors font-medium\"\r\n          >\r\n            Cerrar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffTaskModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Users, Briefcase, CheckCircle, Clock, AlertCircle } from 'lucide-react';\r\nimport { fetchStaff, fetchTasks } from '../store/actions/actions';\r\nimport StaffTaskModal from './StaffTaskModal';\r\n\r\nconst TeamView = () => {\r\n  const dispatch = useDispatch();\r\n  const [staffMembers, setStaffMembers] = useState([]);\r\n  const [allTasks, setAllTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedStaff, setSelectedStaff] = useState(null);\r\n  const [staffStats, setStaffStats] = useState({});\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [dispatch]);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Cargar staff y tareas\r\n      const [staffResult, tasksResult] = await Promise.all([\r\n        dispatch(fetchStaff()),\r\n        dispatch(fetchTasks())\r\n      ]);\r\n\r\n      if (staffResult.success) {\r\n        setStaffMembers(staffResult.data || []);\r\n      }\r\n\r\n      if (tasksResult.success) {\r\n        setAllTasks(tasksResult.data || []);\r\n        calculateStats(staffResult.data || [], tasksResult.data || []);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading team data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const calculateStats = (staff, tasks) => {\r\n    const stats = {};\r\n    \r\n    staff.forEach(member => {\r\n      const memberTasks = tasks.filter(t => t.staff_id === member.id);\r\n      \r\n      stats[member.id] = {\r\n        total: memberTasks.length,\r\n        pending: memberTasks.filter(t => t.status === 'Pendiente').length,\r\n        inProgress: memberTasks.filter(t => t.status === 'En Progreso' || t.status === 'En Diseño').length,\r\n        completed: memberTasks.filter(t => t.status === 'Completo').length,\r\n        blocked: memberTasks.filter(t => t.status === 'Bloqueado').length,\r\n        completionRate: memberTasks.length > 0 \r\n          ? Math.round((memberTasks.filter(t => t.status === 'Completo').length / memberTasks.length) * 100)\r\n          : 0\r\n      };\r\n    });\r\n\r\n    setStaffStats(stats);\r\n  };\r\n\r\n  const handleStaffClick = (staff) => {\r\n    setSelectedStaff(staff);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedStaff(null);\r\n    loadData(); // Recargar datos al cerrar\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    const colors = {\r\n      'Pendiente': 'bg-gray-100 text-gray-700',\r\n      'En Progreso': 'bg-blue-100 text-blue-700',\r\n      'En Diseño': 'bg-purple-100 text-purple-700',\r\n      'Completo': 'bg-green-100 text-green-700',\r\n      'Bloqueado': 'bg-red-100 text-red-700',\r\n    };\r\n    return colors[status] || 'bg-gray-100 text-gray-700';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Cargando equipo...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center space-x-3 mb-2\">\r\n            <Users className=\"w-8 h-8 text-blue-600\" />\r\n            <h1 className=\"text-3xl font-bold text-gray-800\">Equipo de Trabajo</h1>\r\n          </div>\r\n          <p className=\"text-gray-600\">Gestión de tareas por miembro del equipo</p>\r\n        </div>\r\n\r\n        {/* Stats Overview */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\r\n          <div className=\"bg-white rounded-lg shadow-md p-4 border-l-4 border-blue-500\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Total Equipo</p>\r\n                <p className=\"text-2xl font-bold text-gray-800\">{staffMembers.length}</p>\r\n              </div>\r\n              <Users className=\"w-8 h-8 text-blue-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-md p-4 border-l-4 border-orange-500\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Tareas Totales</p>\r\n                <p className=\"text-2xl font-bold text-gray-800\">{allTasks.length}</p>\r\n              </div>\r\n              <Briefcase className=\"w-8 h-8 text-orange-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-md p-4 border-l-4 border-green-500\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Completadas</p>\r\n                <p className=\"text-2xl font-bold text-gray-800\">\r\n                  {allTasks.filter(t => t.status === 'Completo').length}\r\n                </p>\r\n              </div>\r\n              <CheckCircle className=\"w-8 h-8 text-green-500\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-md p-4 border-l-4 border-red-500\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Bloqueadas</p>\r\n                <p className=\"text-2xl font-bold text-gray-800\">\r\n                  {allTasks.filter(t => t.status === 'Bloqueado').length}\r\n                </p>\r\n              </div>\r\n              <AlertCircle className=\"w-8 h-8 text-red-500\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Staff Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {staffMembers.map((staff) => {\r\n            const stats = staffStats[staff.id] || { total: 0, pending: 0, inProgress: 0, completed: 0, blocked: 0, completionRate: 0 };\r\n            \r\n            return (\r\n              <div\r\n                key={staff.id}\r\n                onClick={() => handleStaffClick(staff)}\r\n                className=\"bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 cursor-pointer border-2 border-transparent hover:border-blue-400 overflow-hidden group\"\r\n              >\r\n                {/* Header con nombre */}\r\n                <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 p-4\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <div className=\"w-12 h-12 bg-white rounded-full flex items-center justify-center text-blue-600 font-bold text-xl\">\r\n                      {staff.name ? staff.name.charAt(0).toUpperCase() : '?'}\r\n                    </div>\r\n                    <div className=\"flex-1 text-white\">\r\n                      <h3 className=\"font-bold text-lg truncate\">{staff.name}</h3>\r\n                      <p className=\"text-sm text-blue-100 truncate\">{staff.role_description || 'Sin rol asignado'}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Body con estadísticas */}\r\n                <div className=\"p-4 space-y-3\">\r\n                  {/* Progreso */}\r\n                  <div>\r\n                    <div className=\"flex items-center justify-between mb-1\">\r\n                      <span className=\"text-xs font-medium text-gray-600\">Progreso</span>\r\n                      <span className=\"text-xs font-bold text-gray-800\">{stats.completionRate}%</span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div \r\n                        className=\"bg-green-500 h-2 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${stats.completionRate}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Estadísticas de tareas */}\r\n                  <div className=\"grid grid-cols-2 gap-2 pt-2 border-t\">\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-2xl font-bold text-gray-800\">{stats.total}</p>\r\n                      <p className=\"text-xs text-gray-600\">Total</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <p className=\"text-2xl font-bold text-green-600\">{stats.completed}</p>\r\n                      <p className=\"text-xs text-gray-600\">Completas</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Badges de estado */}\r\n                  <div className=\"flex flex-wrap gap-2 pt-2 border-t\">\r\n                    {stats.pending > 0 && (\r\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-700\">\r\n                        <Clock className=\"w-3 h-3 mr-1\" />\r\n                        {stats.pending} Pendiente{stats.pending > 1 ? 's' : ''}\r\n                      </span>\r\n                    )}\r\n                    {stats.inProgress > 0 && (\r\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-700\">\r\n                        <Briefcase className=\"w-3 h-3 mr-1\" />\r\n                        {stats.inProgress} En Curso\r\n                      </span>\r\n                    )}\r\n                    {stats.blocked > 0 && (\r\n                      <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-700\">\r\n                        <AlertCircle className=\"w-3 h-3 mr-1\" />\r\n                        {stats.blocked} Bloqueada{stats.blocked > 1 ? 's' : ''}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Footer */}\r\n                <div className=\"bg-gray-50 px-4 py-2 text-center group-hover:bg-blue-50 transition-colors\">\r\n                  <p className=\"text-sm text-gray-600 group-hover:text-blue-600 font-medium\">\r\n                    Click para ver tareas →\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Empty State */}\r\n        {staffMembers.length === 0 && !loading && (\r\n          <div className=\"text-center py-12\">\r\n            <Users className=\"w-16 h-16 text-gray-300 mx-auto mb-4\" />\r\n            <h3 className=\"text-xl font-medium text-gray-600 mb-2\">No hay miembros del equipo</h3>\r\n            <p className=\"text-gray-500\">Agrega miembros para comenzar a gestionar tareas</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal de tareas del staff */}\r\n      {selectedStaff && (\r\n        <StaffTaskModal\r\n          staff={selectedStaff}\r\n          onClose={handleCloseModal}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamView;\r\n"],"names":["CircleAlert","createLucideIcon","Filter","TriangleAlert","TaskStatusOptions","StaffTaskModal","staff","onClose","dispatch","useDispatch","tasks","setTasks","useState","filteredTasks","setFilteredTasks","projects","setProjects","stages","setStages","loading","setLoading","filterStatus","setFilterStatus","sortBy","setSortBy","editingTask","setEditingTask","useEffect","loadData","applyFilters","tasksResult","projectsResult","stagesResult","fetchTasksByStaff","fetchProjects","fetchStages","error","filtered","a","b","statusOrder","projA","getProjectName","projB","stageA","getStageName","stageB","projectId","project","p","stageId","stage","s","handleStatusChange","taskId","newStatus","updateTaskStatus","handleDeleteTask","deleteTask","getStatusIcon","status","jsx","CheckCircle","AlertTriangle","Clock","getStatusColor","taskCounts","t","jsxs","e","task","Trash2","TeamView","staffMembers","setStaffMembers","allTasks","setAllTasks","selectedStaff","setSelectedStaff","staffStats","setStaffStats","staffResult","fetchStaff","fetchTasks","calculateStats","stats","member","memberTasks","handleStaffClick","handleCloseModal","Users","Briefcase","AlertCircle"],"mappings":"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","x_google_ignoreList":[0,1,2]}